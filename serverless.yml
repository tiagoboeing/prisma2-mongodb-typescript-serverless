service: sls-prisma2-typescript-mongodb

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage, 'dev'}
  lambdaHashingVersion: "20201221"
  environment:
    PRISMA_QUERY_ENGINE_BINARY: ${file(./utils/layers.js):handler.path}
    DATABASE_URL: mongodb+srv://test_prisma:test_prisma@biblioteca-dos-cursos.9bapz.gcp.mongodb.net/myFirstDatabase?retryWrites=true&w=majority

package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-offline

functions:
  index:
    handler: src/index.handler
    events:
      - http:
          path: /
          method: get
    layers:
      - { Ref: PrismaGeneratedLambdaLayer }

# Unfortunelly for Serverless Prisma need binary and Lambda don't have permissions to access this
# the workaround is to create layers with the binaries
# https://github.com/prisma/prisma/issues/5023
layers:
  prismaGenerated:
    path: .build/.webpack/dependencies/node_modules
    description: Prisma binaries and schema

#   prismaRhel:
#     path: node_modules/.prisma/client/query-engine-rhel-openssl-1.0.x
#     description: Prisma Red Hat binary

resources:
  Outputs:
    PrismaGeneratedLayerExport:
      Value:
        Ref: PrismaGeneratedLambdaLayer
      Export:
        Name: PrismaGeneratedLambdaLayer

custom:
  webpack:
    keepOutputDirectory: true
    includeModules: false
    # packagerOptions:
    #   scripts:
    #     - prisma generate
